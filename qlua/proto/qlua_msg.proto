syntax = "proto3";

enum ProcedureType {

    UNKNOWN_PROCEDURE_TYPE = 0;
    IS_CONNECTED = 1;
    GET_SCRIPT_PATH = 2;
    GET_INFO_PARAM = 3;
    MESSAGE = 4;
    SLEEP = 5;
    GET_WORKING_FOLDER = 6;
    PRINT_DBG_STR = 7;
    GET_ITEM = 8;
    GET_ORDER_BY_NUMBER = 9; // NOT TESTED
    GET_NUMBER_OF = 10;
    SEARCH_ITEMS = 11; // NOT IMPLEMENTED YET
    GET_CLASSES_LIST = 12;
    GET_CLASS_INFO = 13;
    GET_CLASS_SECURITIES = 14;
    GET_MONEY = 15;
    GET_MONEY_EX = 16;
    GET_DEPO = 17;
    GET_DEPO_EX = 18;
    GET_FUTURES_LIMIT = 19; // NOT TESTED
    GET_FUTURES_HOLDING = 20; // NOT TESTED
    GET_SECURITY_INFO = 21;
    GET_TRADE_DATE = 22;
    GET_QUOTE_LEVEL2 = 23;
}

message TableEntry {

    string k = 1;
    string v = 2;
}


message Qlua_Request {

    int64 token = 1;
    ProcedureType type = 2;
    bytes args = 3;
}

message Qlua_Response {

    int64 token = 1;
    ProcedureType type = 2;
  
    // Если это внутренняя ошибка RPC-сервиса, то установлен is_error,
    // в противном случае -- установлен result (даже если он содержит в себе
    // ошибку от библиотеки qlua). Таким образом, ошибки, возвращаемые библиотекой 
    // qlua (например, nil в определённых случаях), в рамках RPC-сервиса 
    // являются обычным результатом выполнения запроса.
    oneof qlua_response_data {
        bool is_error = 3;
        bytes result = 4;
    }
}

message IsConnected_Result {
    int32 is_connected = 1;
}

message GetScriptPath_Result {
    string script_path = 1;
}

message GetInfoParam_Request {

    // Хотел сделать enum-ом, чтобы меньше слать по wire, но в используемой Lua-реализации
    // protobuf'a нет адекватного способа вернуть строковое имя enum'а, поэтому говнокод, который
    // надо будет для этого написать, скорее всего нивелирует какой-либо перфомансный 
    // профит от enum'ов в данном случае. К тому же, при добавлении новых видов paramName 
    // при использовании строк ничего не надо будет перекомпилировать.
    string param_name = 1;  
}

message GetInfoParam_Result {
    string info_param = 1;
}

message Message_Request {
  
    string message = 1;
    int32 icon_type = 2;
}

message Message_Result {
    int32 result = 1;
}

message Sleep_Request {
    int32 time = 1;
}

message Sleep_Result {
    int32 result = 1;
}

message GetWorkingFolder_Result {
    string working_folder = 1;
}

message PrintDbgStr_Request {
    string s = 1;
}

message GetItem_Request {

    string table_name = 1;
    double index = 2;
}

message GetItem_Result {
    repeated TableEntry table_row = 1;
}

message GetOrderByNumber_Request {

    string class_code = 1;
    uint32 order_id = 2;
}

message GetOrderByNumber_Result {

    repeated TableEntry order = 1;
    int32 indx = 2;
}

message GetNumberOf_Request {
    string table_name = 1;
}

message GetNumberOf_Result {
    int32 result = 1;
}

message GetClassesList_Result {
    string classes_list = 1;
}

message GetClassInfo_Request {
    string class_code = 1;
}

message GetClassInfo_Result {
    repeated TableEntry class_info = 1;
}

message GetClassSecurities_Request {
    string class_code = 1;
}

message GetClassSecurities_Result {
    string class_securities = 1;
}

message GetMoney_Request {

    string client_code = 1; // Код клиента
    string firmid = 2; // Фирма
    string tag = 3; // Группа
    string currcode = 4; // Валюта
}

message GetMoney_Result {
    repeated TableEntry money = 1;
}

message GetMoneyEx_Request {

    string firmid = 1; // Фирма
    string client_code = 2; // Код клиента
    string tag = 3; // Группа
    string currcode = 4; // Валюта
    int32 limit_kind = 5; // Вид лимита (Как задать лимит "Tx"? Ответ: видимо, никак -- это недоработка в API qlua)
}

message GetMoneyEx_Result {
    repeated TableEntry money_ex = 1;
}

message GetDepo_Request {

    string client_code = 1; // Код клиента
    string firmid = 2; // Фирма
    string sec_code = 3; // Код бумаги
    string trdaccid = 4; // Счет депо
}

message GetDepo_Result {
    repeated TableEntry depo = 1;
}

message GetDepoEx_Request {

    string firmid = 1; // Фирма
    string client_code = 2; // Код клиента
    string sec_code = 3; // Код бумаги
    string trdaccid = 4; // Счет депо
    int32 limit_kind = 5; // Вид лимита (Как задать лимит "Tx"? Ответ: видимо, никак -- это недоработка в API qlua)
}

message GetDepoEx_Result {
    repeated TableEntry depo_ex = 1;
}

message GetFuturesLimit_Request {

    string firmid = 1;
    string trdaccid = 2;
    int32 limit_type = 3;
    string currcode = 4;
}

message GetFuturesLimit_Result {
    repeated TableEntry futures_limit = 1;
}

message GetFuturesHolding_Request {

    string firmid = 1;
    string trdaccid = 2;
    string sec_code = 3;
    int32 type = 4;
}

message GetFuturesHolding_Result {
    repeated TableEntry futures_holding = 1;
}

message GetSecurityInfo_Request {

    string class_code = 1;
    string sec_code = 2;
}

message GetSecurityInfo_Result {
    repeated TableEntry security_info = 1;
}

message GetTradeDate_Result {
    repeated TableEntry trade_date = 1;
}

message GetQuoteLevel2_Request {

    string class_code = 1;
    string sec_code = 2;
}

message GetQuoteLevel2_Result {

    message QuoteEntry {
    
        string price = 1;
        string quantity = 2;
    }

    string bid_count = 1;
    string offer_count = 2;
    repeated QuoteEntry bid = 3;
    repeated QuoteEntry offer = 4;
}